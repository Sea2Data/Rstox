% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rstox_base.r
\name{setBaselineParameters}
\alias{setBaselineParameters}
\alias{readBaselineParametersJava}
\alias{getBaselineParameters}
\alias{modifyBaselineParameters}
\title{Set, read, get or modify baseline parameters.}
\usage{
setBaselineParameters(projectName, msg = FALSE, parlist = list(),
  modelType = "all", save = c("last", "java"), ...)

readBaselineParametersJava(projectName, keepMissing = TRUE)

getBaselineParameters(projectName, modelType = "all")

modifyBaselineParameters(projectName, parameters, parlist = list(), ...)
}
\arguments{
\item{projectName}{The name or full path of the project, a baseline object (as returned from \code{\link{getBaseline}} or \code{\link{runBaseline}}, og a project object (as returned from \code{\link{openProject}}).}

\item{msg}{Logical; if TRUE print old and new parameters.}

\item{parlist}{List of parameters values overriding existing parameter values. These are specified as processName = list(parameter = value), for example AcousticDensity = list(a = -70, m = 10), BioStationWeighting = list(WeightingMethod = "NASC", a = -70, m = 10). Numeric parameters must be given as numeric, string parameters as string, and logical parameters (given as strings "true"/"false" in StoX) can be given as logical TRUE/FALSE. New parameters can be set by setBaselineParameters() but not removed in the current version.}

\item{modelType}{The type of model to run, currently one of "baseline" and "baseline-report". First element used. If given as "all", parameters from both baseline and baseline-report are returned.}

\item{save}{A string naming the types of parameter to save ("java" implies saving the parameters to Java memory and to RstoxEnv[[projectName]]$javaParameters, whereas "last" implies saving the parameters to RstoxEnv[[projectName]]$javaParameters and to the projectData which are saved along with bootstrap and impute data). If save=TRUE, save is set to c("java", "last").}

\item{...}{Same as parlist, but can be specified separately (not in a list but as separate inputs).}

\item{keepMissing}{Logical: If FALSE discard empty parameters of processes when reading the parameters from the Java memory.}

\item{parameters}{A list of the baseline parameters to modify using \code{parlist} or \code{...}.}

\item{rver}{The version of the stox library.}
}
\value{
The original parameters
}
\description{
\code{setBaselineParameters} Sets baseline parameters in memory to new values specified in \code{parlist} or \code{...}. \cr \cr
\code{readBaselineParametersJava} Reads the baseline parameters from the Java memory. \cr \cr
\code{getBaselineParameters} Gets either original, java or last used baseline parameters \cr \cr
\code{modifyBaselineParameters} Only modifies the parameters in \code{parameters} using those in \code{parlist} and \code{...}. This function does not change the values other than in the return of the function (not in the RstoxEnv environment nor in the project file). \cr \cr
}
\keyword{internal}
