% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rstox_spatial.r
\name{getProjString}
\alias{getProjString}
\alias{projectMatrixList}
\alias{spatial2matrixList}
\alias{matrixList2multipolygon}
\alias{multipolygon2spatial}
\alias{isSpatial}
\alias{isMatrixList}
\alias{isMultipolygon}
\alias{matrixListLevel}
\alias{rapplyKeepDataFrames}
\title{Utility functions for coordinate transformation between geographic and Cartesian coordinates, and calculation of multipolygon area.}
\usage{
getProjString(par = list(proj = "laea", units = "kmi", lon_0 = NA, lat_0
  = NA, x_0 = 0, y_0 = 0, ellps = "WGS84", datum = "WGS84"), ...,
  x = NULL, list.out = FALSE, requireClosed = TRUE)

projectMatrixList(x, par = list(proj = "laea", units = "kmi", lon_0 = NA,
  lat_0 = NA, x_0 = 0, y_0 = 0, ellps = "WGS84", datum = "WGS84"),
  inv = FALSE, data.frame.out = FALSE)

spatial2matrixList(x, drop = TRUE, data.frame.out = FALSE)

matrixList2multipolygon(x, requireClosed = TRUE)

multipolygon2spatial(x)

isSpatial(x)

isMatrixList(x)

isMultipolygon(x)

matrixListLevel(x)

rapplyKeepDataFrames(x, FUN, ...)
}
\arguments{
\item{par}{A list of proj4 parameters.}

\item{...}{Further proj4 parameters overriding those in \code{par}.}

\item{x}{One of three onjects depending on the funciton: (1) a two column matrix of x and y coordinates, indicating only one polygon, or a list (of lists) of such matrices, indicating several polygons in a multipolygon. If a list of lists of two column matrices are given, the first matrix of each list is the polygon, and the following are subtractions. (2) A wkt string such as "MULTIPOLYGON(((4 55, 15 56, 15 59, 4 59, 4 55)))". (3) A spatial object.}

\item{list.out}{Logical: If TRUE the projection info is returned as a list instead of a concatenate string.}

\item{requireClosed}{Logical: If TRUE (default) require polygons to be closed in the sense that the last point should equal the first. Set this to FALSE to allow adding the first point as the last point.}

\item{inv}{Logical: If TRUE, do the inverse conversion in rgdal::project().}

\item{data.frame.out}{Logical: If TRUE convert the matrices to data frames with columns x and y.}

\item{drop}{Logical: If TRUE drop the list if only one multipolygon or only one polygon is given.}

\item{FUN}{The funciton to apply to the elements in \code{rapplyKeepDataFrames}.}
}
\description{
\code{getProjString} generates a projection string in the proj4 format. \cr \cr
\code{projectMatrixList} projects a list of matrices. \cr \cr
\code{spatial2matrixList} converts a Spatial object to a list of matrices. \cr \cr
\code{matrixList2multipolygon} converts a list of matrices to a multipolygon wkt string. \cr \cr
\code{multipolygon2spatial} converts a multipolygon wkt string to a Spatial object. \cr \cr
\code{isSpatial} determines whether the input is of Spatial class. \cr \cr
\code{isMatrixList} determines whether the input is a list of matrices or data frames. \cr \cr
\code{isMultipolygon} determines whether the input is a multipolygon wkt (well known text) string. \cr \cr
\code{matrixListLevel} determines the number of levels in a list of matrices, where 1 denotes a matrix, 2 denotes a list of matrices, and 3 denotes a list of lists of matrices. \cr \cr
\code{rapplyKeepDataFrames} lapplies the funciton \code{FUN} throughout the first two levels of a list but not into any data frames. \cr \cr
}
\keyword{internal}
